// Code generated by Wire. DO NOT EDIT.

//go:generate wire
//+build !wireinject

package di

import (
	"github.com/boreq/eggplant/config"
	"github.com/boreq/eggplant/library"
	"github.com/boreq/eggplant/pkg/service/adapters/auth"
	"github.com/boreq/eggplant/pkg/service/application"
	auth2 "github.com/boreq/eggplant/pkg/service/application/auth"
	"github.com/boreq/eggplant/pkg/service/application/queries"
	"github.com/boreq/eggplant/pkg/service/ports/http"
	"github.com/boreq/eggplant/store"
)

// Injectors from wire.go:

func BuildService(lib *library.Library, trackStore *store.TrackStore, thumbnailStore *store.Store, conf *config.Config) (*Service, error) {
	db, err := newBolt(conf)
	if err != nil {
		return nil, err
	}
	bcryptPasswordHasher := auth.NewBcryptPasswordHasher()
	cryptoAccessTokenGenerator := auth.NewCryptoAccessTokenGenerator()
	userRepository, err := auth.NewUserRepository(db, bcryptPasswordHasher, cryptoAccessTokenGenerator)
	if err != nil {
		return nil, err
	}
	registerInitialHandler := auth2.NewRegisterInitialHandler(userRepository)
	loginHandler := auth2.NewLoginHandler(userRepository)
	logoutHandler := auth2.NewLogoutHandler(userRepository)
	checkAccessTokenHandler := auth2.NewCheckAccessTokenHandler(userRepository)
	listHandler := auth2.NewListHandler(userRepository)
	applicationAuth := application.Auth{
		RegisterInitial:  registerInitialHandler,
		Login:            loginHandler,
		Logout:           logoutHandler,
		CheckAccessToken: checkAccessTokenHandler,
		List:             listHandler,
	}
	commands := application.Commands{}
	statsHandler := queries.NewStatsHandler(userRepository)
	applicationQueries := application.Queries{
		Stats: statsHandler,
	}
	applicationApplication := &application.Application{
		Auth:     applicationAuth,
		Commands: commands,
		Queries:  applicationQueries,
	}
	handler, err := http.NewHandler(applicationApplication, lib, trackStore, thumbnailStore)
	if err != nil {
		return nil, err
	}
	server := http.NewServer(handler)
	service := NewService(server)
	return service, nil
}
